# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-03 21:53
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import faker.providers.lorem.la
import multiselectfield.db.fields
import phonenumber_field.modelfields
import taggit.managers
import uuid


class Migration(migrations.Migration):

    replaces = [('database', '0001_initial'), ('database', '0002_contact_notes'), ('database', '0003_contact_address'), ('database', '0004_client_description'), ('database', '0005_service'), ('database', '0006_testimonial'), ('database', '0007_testimonial_issue_date'), ('database', '0008_profile_active'), ('database', '0009_profile_bio'), ('database', '0010_profile_avatar_url'), ('database', '0011_profile_username'), ('database', '0012_report'), ('database', '0013_client_published'), ('database', '0014_profile_notify'), ('database', '0015_task_color'), ('database', '0016_auto_20160507_2130'), ('database', '0017_profile_published'), ('database', '0018_auto_20161020_1019'), ('database', '0019_auto_20161129_1904'), ('database', '0020_report_active'), ('database', '0021_note'), ('database', '0022_project_hidden'), ('database', '0023_auto_20161207_0006'), ('database', '0024_service_icon'), ('database', '0025_client_icon'), ('database', '0026_client_notes'), ('database', '0027_company_notes'), ('database', '0028_client_url'), ('database', '0029_testimonial_slug'), ('database', '0030_testimonial_title'), ('database', '0031_settings'), ('database', '0032_auto_20170209_0113'), ('database', '0033_note_priority'), ('database', '0034_note_due_date'), ('database', '0035_note_requires'), ('database', '0036_auto_20170605_1803'), ('database', '0037_auto_20170606_1451'), ('database', '0038_auto_20170606_2044'), ('database', '0039_contact_subscribed'), ('database', '0040_contact_uuid'), ('database', '0041_auto_20170608_1952'), ('database', '0042_auto_20170609_2316'), ('database', '0043_auto_20170609_2324'), ('database', '0044_auto_20170609_2327'), ('database', '0045_auto_20170609_2330'), ('database', '0046_newsletter'), ('database', '0047_newsletter_subject'), ('database', '0048_client_hidden'), ('database', '0049_contract'), ('database', '0050_auto_20170613_1122'), ('database', '0051_auto_20170613_1123'), ('database', '0052_contract_task'), ('database', '0053_contract_project'), ('database', '0054_contractsettings'), ('database', '0055_auto_20170615_1459'), ('database', '0056_auto_20170616_0754'), ('database', '0057_auto_20170616_1601'), ('database', '0058_auto_20170616_1647'), ('database', '0059_auto_20170616_2125'), ('database', '0060_auto_20170622_1448'), ('database', '0061_estimate_project'), ('database', '0062_profile_icon_size'), ('database', '0063_auto_20170624_1534'), ('database', '0064_settings_dashboard_choices'), ('database', '0065_profile_dashboard_choices'), ('database', '0066_auto_20170625_1559'), ('database', '0067_profile_override_dashboard'), ('database', '0068_remove_note_requires'), ('database', '0069_auto_20170630_0934'), ('database', '0070_auto_20170630_2006'), ('database', '0071_auto_20170630_2009'), ('database', '0072_report_invoices'), ('database', '0073_auto_20170701_2052'), ('database', '0074_auto_20170701_2058'), ('database', '0075_note_hidden'), ('database', '0076_company_note'), ('database', '0077_auto_20170702_1654'), ('database', '0078_remove_company_notes'), ('database', '0079_auto_20170703_1457'), ('database', '0080_auto_20170703_1515'), ('database', '0081_proposal'), ('database', '0082_auto_20170704_0805'), ('database', '0083_auto_20170704_0956'), ('database', '0084_auto_20170705_1956'), ('database', '0085_auto_20170705_2041'), ('database', '0086_profile_app_admin'), ('database', '0087_auto_20170705_2049'), ('database', '0088_auto_20170706_0650'), ('database', '0089_elevation_zipcode'), ('database', '0090_auto_20170706_1925'), ('database', '0091_project_flex_date'), ('database', '0092_auto_20170709_1648'), ('database', '0093_auto_20170710_1737'), ('database', '0094_settings_dashboard_order'), ('database', '0095_auto_20170710_2038'), ('database', '0096_client_note'), ('database', '0097_remove_project_flex_date'), ('database', '0098_auto_20170715_1556'), ('database', '0099_note_title'), ('database', '0100_auto_20170718_0906'), ('database', '0101_remove_appsettings_dashboard_order'), ('database', '0102_profile_editor_choices'), ('database', '0103_auto_20170718_1913'), ('database', '0104_auto_20170718_1914'), ('database', '0105_remove_note_priority'), ('database', '0106_auto_20170718_1921'), ('database', '0107_note_tags'), ('database', '0108_auto_20170720_0652'), ('database', '0109_appsettings_tags'), ('database', '0110_auto_20170720_0822'), ('database', '0111_file'), ('database', '0112_auto_20170720_1510'), ('database', '0113_auto_20170720_1511'), ('database', '0114_auto_20170720_1515'), ('database', '0115_file_name'), ('database', '0116_worldborder'), ('database', '0117_auto_20170720_1726'), ('database', '0118_auto_20170724_0855'), ('database', '0119_auto_20170726_2023'), ('database', '0120_auto_20170726_2030'), ('database', '0121_estimate_is_sow'), ('database', '0122_auto_20170729_2023'), ('database', '0123_profile_is_contact'), ('database', '0124_invoice_cog'), ('database', '0125_time_cog'), ('database', '0126_auto_20170803_1614'), ('database', '0127_auto_20170803_1720'), ('database', '0128_auto_20170803_1749')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('estimate_counter', models.IntegerField(blank=True, null=True, verbose_name=b'Estimate Counter')),
                ('invoice_counter', models.IntegerField(blank=True, null=True, verbose_name=b'Invoice Counter')),
                ('currency_symbol', models.CharField(blank=True, default=b'$', max_length=300, null=True, verbose_name=b'Currency Symbol')),
            ],
            options={
                'verbose_name': 'Company',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('first_name', models.CharField(blank=True, max_length=300, null=True)),
                ('last_name', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True)),
                ('office_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True)),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Client')),
                ('notes', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('subscribed', models.BooleanField(default=True)),
                ('uuid', models.CharField(default=uuid.uuid4, max_length=300, verbose_name='UUID')),
            ],
        ),
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name=b'Issue Date')),
                ('subject', models.CharField(blank=True, max_length=300, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Estimate Amount')),
                ('document_id', models.IntegerField(blank=True, null=True, verbose_name=b'Estimate ID')),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('tax', models.IntegerField(blank=True, null=True)),
                ('tax2', models.IntegerField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, default=b'United States Dollar - USD', max_length=300, null=True)),
                ('accepted_date', models.DateField(blank=True, null=True)),
                ('declined_date', models.DateField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name=b'Issue Date')),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('document_id', models.IntegerField(blank=True, null=True, verbose_name=b'Invoice ID')),
                ('po_number', models.CharField(blank=True, max_length=300, null=True, verbose_name=b'PO Number')),
                ('subject', models.CharField(blank=True, max_length=300, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name=b'Invoice Amount')),
                ('paid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('subtotal', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('discount', models.IntegerField(blank=True, null=True)),
                ('tax', models.IntegerField(blank=True, null=True)),
                ('tax2', models.IntegerField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, default=b'United States Dollar - USD', max_length=300, null=True)),
                ('currency_symbol', models.CharField(blank=True, default=b'$', max_length=300, null=True)),
                ('document_type', models.CharField(blank=True, max_length=300, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('unit', models.DecimalField(blank=True, decimal_places=2, default=1.0, max_digits=12, null=True, verbose_name='Unit')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('active', models.BooleanField(default=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=300, null=True)),
                ('notify', models.BooleanField(default=True)),
                ('published', models.BooleanField(default=False)),
                ('icon_size', models.CharField(blank=True, max_length=255, null=True)),
                ('page_size', models.PositiveIntegerField(blank=True, null=True)),
                ('dashboard_choices', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('data', 'Data'), ('invoices', 'Invoices'), ('notes', 'Notes'), ('projects', 'Projects'), ('times', 'Times'), ('totals', 'Totals')], max_length=41, null=True, verbose_name='Dashboard Choices')),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('app_admin', models.BooleanField(default=False)),
                ('editor_choices', models.CharField(blank=True, choices=[('ckeditor', 'CKEditor'), ('tinymce', 'TinyMCE')], max_length=8, null=True)),
                ('is_contact', models.BooleanField(default=False)),
                ('dashboard_override', models.BooleanField(default=False, verbose_name='Dashboard Override')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=300, null=True, unique=True, verbose_name=b'Project Name')),
                ('code', models.IntegerField(blank=True, null=True, verbose_name=b'Project Code')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('total_hours', models.FloatField(blank=True, null=True)),
                ('billable_hours', models.FloatField(blank=True, null=True)),
                ('billable_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('budget_spent', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('budget_remaining', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('total_costs', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('team_costs', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('expenses', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('billable', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('unit', models.DecimalField(blank=True, decimal_places=2, default=1.0, max_digits=12, null=True, verbose_name=b'Unit')),
            ],
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('project_code', models.IntegerField(blank=True, null=True)),
                ('log', models.TextField(blank=True, null=True)),
                ('hours', models.DecimalField(blank=True, decimal_places=2, default=1.0, max_digits=12, null=True, verbose_name='Hours')),
                ('billable', models.BooleanField(default=True)),
                ('invoiced', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=300, null=True)),
                ('last_name', models.CharField(blank=True, max_length=300, null=True)),
                ('department', models.CharField(blank=True, max_length=300, null=True)),
                ('employee', models.BooleanField(default=True)),
                ('cost_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('cost_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.CharField(blank=True, max_length=300, null=True)),
                ('external_reference_url', models.URLField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Client')),
                ('estimate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Estimate')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='database.Invoice')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Project')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Task')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('cog', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Cost of goods')),
            ],
            options={
                'ordering': ('-updated',),
            },
        ),
        migrations.AddField(
            model_name='project',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Task'),
        ),
        migrations.AddField(
            model_name='project',
            name='team',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Project'),
        ),
        migrations.AddField(
            model_name='client',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Company')),
                ('icon', models.CharField(blank=True, max_length=25, null=True, verbose_name="Font Awesome Icon (without 'fa-')")),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Company')),
                ('issue_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Issue Date')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('gross', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('net', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='published',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='task',
            name='color',
            field=models.CharField(blank=True, max_length=7, null=True),
        ),
        migrations.AlterField(
            model_name='client',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='task',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='company',
            name='currency_symbol',
            field=models.CharField(blank=True, default='$', max_length=300, null=True, verbose_name='Currency Symbol'),
        ),
        migrations.AlterField(
            model_name='company',
            name='estimate_counter',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimate Counter'),
        ),
        migrations.AlterField(
            model_name='company',
            name='invoice_counter',
            field=models.IntegerField(blank=True, null=True, verbose_name='Invoice Counter'),
        ),
        migrations.AlterField(
            model_name='estimate',
            name='amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Estimate Amount'),
        ),
        migrations.AlterField(
            model_name='estimate',
            name='currency',
            field=models.CharField(blank=True, default='United States Dollar - USD', max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='estimate',
            name='document_id',
            field=models.IntegerField(blank=True, null=True, verbose_name='Estimate ID'),
        ),
        migrations.AlterField(
            model_name='estimate',
            name='issue_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Issue Date'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Invoice Amount'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='currency',
            field=models.CharField(blank=True, default='United States Dollar - USD', max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='currency_symbol',
            field=models.CharField(blank=True, default='$', max_length=300, null=True),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='document_id',
            field=models.IntegerField(blank=True, null=True, verbose_name='Invoice ID'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='issue_date',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Issue Date'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='po_number',
            field=models.CharField(blank=True, max_length=300, null=True, verbose_name='PO Number'),
        ),
        migrations.AlterField(
            model_name='project',
            name='code',
            field=models.IntegerField(blank=True, null=True, verbose_name='Project Code'),
        ),
        migrations.AlterField(
            model_name='project',
            name='name',
            field=models.CharField(blank=True, max_length=300, null=True, unique=True, verbose_name='Project Name'),
        ),
        migrations.AlterField(
            model_name='task',
            name='unit',
            field=models.DecimalField(blank=True, decimal_places=2, default=1.0, max_digits=12, null=True, verbose_name='Unit'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Due')),
                ('hidden', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.AddField(
            model_name='project',
            name='hidden',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='client',
            name='icon',
            field=models.CharField(blank=True, max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='client',
            name='url',
            field=models.URLField(blank=True, null=True, verbose_name='URL'),
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry', models.CharField(blank=True, max_length=3000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('contacts', models.ManyToManyField(blank=True, related_name='Contacts', to='database.Contact')),
                ('subject', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='hidden',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Client')),
                ('statement_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Estimate')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Task')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Project')),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContractSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timing_of_payment', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Timing of Payment')),
                ('termination', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Termination')),
                ('governing_laws', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Governing Laws')),
                ('confidentiality', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Confidentiality')),
                ('taxes', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Taxes')),
                ('limited_warranty', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Limited Warranty')),
                ('complete_agreement', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Complete Agreement')),
                ('authority_to_act', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Authority to Act')),
                ('contributor_assignment_agreement', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Contributor Assignment Agreement')),
                ('parties', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Parties')),
                ('payment_terms', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Payment Terms')),
                ('period_of_agreement', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Period of Agreement')),
                ('scope_of_work', models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True, verbose_name='Scope of Work')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='project',
            name='name',
            field=models.CharField(blank=True, max_length=300, null=True, verbose_name='Project Name'),
        ),
        migrations.AddField(
            model_name='estimate',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Project'),
        ),
        migrations.AddField(
            model_name='report',
            name='invoices',
            field=models.ManyToManyField(blank=True, related_name='Invoices', to='database.Invoice'),
        ),
        migrations.AddField(
            model_name='client',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='client',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='company',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='company',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='contact',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='contact',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='project',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='project',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='report',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='report',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='task',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='task',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='estimate',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='estimate',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='company',
            name='note',
            field=models.ManyToManyField(blank=True, to='database.Note'),
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Client')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Project')),
                ('statement_of_work', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Estimate')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Task')),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='created',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='invoice',
            name='updated',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='client',
            name='url',
            field=models.URLField(blank=True, null=True, verbose_name='Website'),
        ),
        migrations.CreateModel(
            name='Elevation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rast', django.contrib.gis.db.models.fields.RasterField(srid=4326)),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zipcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='note',
            field=models.ManyToManyField(blank=True, to='database.Note'),
        ),
        migrations.AlterField(
            model_name='task',
            name='color',
            field=models.CharField(blank=True, choices=[('success', 'Success'), ('info', 'Info'), ('warning', 'Warning'), ('danger', 'Danger')], max_length=7, null=True),
        ),
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('icon_size', models.CharField(blank=True, max_length=255, null=True)),
                ('page_size', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('dashboard_choices', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('data', 'Data'), ('invoices', 'Invoices'), ('notes', 'Notes'), ('projects', 'Projects'), ('times', 'Times'), ('totals', 'Totals')], max_length=41, null=True, verbose_name='Dashboard Choices')),
                ('auto_hide_notes', models.BooleanField(default=True)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='client',
            name='address',
            field=models.TextField(blank=True, default=faker.providers.lorem.la.Provider.text, null=True),
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('doc', models.FileField(blank=True, null=True, upload_to='')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('name', models.CharField(blank=True, default=faker.providers.lorem.la.Provider.text, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default=faker.providers.lorem.la.Provider.text, max_length=300)),
                ('area', models.IntegerField(blank=True, null=True)),
                ('pop2005', models.IntegerField(blank=True, null=True, verbose_name='Population 2005')),
                ('fips', models.CharField(blank=True, max_length=2, null=True, verbose_name='FIPS Code')),
                ('iso2', models.CharField(blank=True, max_length=2, null=True, verbose_name='2 Digit ISO')),
                ('iso3', models.CharField(blank=True, max_length=3, null=True, verbose_name='3 Digit ISO')),
                ('un', models.IntegerField(blank=True, null=True, verbose_name='United Nations Code')),
                ('region', models.IntegerField(blank=True, null=True, verbose_name='Region Code')),
                ('subregion', models.IntegerField(blank=True, null=True, verbose_name='Sub-Region Code')),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='contact',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client', to='database.Client'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='database.Client'),
        ),
        migrations.AddField(
            model_name='estimate',
            name='is_sow',
            field=models.BooleanField(default=False, verbose_name='Use for Statement of Work?'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='cog',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Cost of goods'),
        ),
    ]
